{%- if True -%}
# https://gist.github.com/mohanpedala/1e2ff5661761d3abd0385e8223e16425
set -e -x -v -u -o pipefail

{% endif -%}

{#- mv_args: str -#}
{#- read_only_fail: bool -#}

RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m'


TMP_DIR=$(mktemp -d)
ORIGINAL_PWD="${PWD}"

function delete_tmp_dir {
  cd "${ORIGINAL_PWD}"
  rm -rf "${TMP_DIR}"
}
trap delete_tmp_dir EXIT


################################################################################
cat <<EOF > "${TMP_DIR}/EXAMPLE.md.jinja2"

{{ 'TEST' }}
EOF

cat << 'EOF' > "${TMP_DIR}/EXAMPLE.expected.md"
<!--

WARNING: This file is auto-generated by snipinator. Do not edit directly.
SOURCE: `EXAMPLE.md.jinja2`.

-->

TEST
EOF


################################################################################
# No existing file at destination. Should just work.
python -m snipinator.cli --cwd "${TMP_DIR}" \
  {{ mv_args }} \
  -t "${TMP_DIR}/EXAMPLE.md.jinja2" \
  -o "${TMP_DIR}/EXAMPLE.generated.md"

# Check the contents of the generated file versus the expected output
git diff --no-index --exit-code \
  "${TMP_DIR}/EXAMPLE.expected.md" \
  "${TMP_DIR}/EXAMPLE.generated.md"
echo -e "${GREEN}Successfully generated expected output${NC}"
################################################################################
# Remove all write permissions from the generated file.
chmod a-w "${TMP_DIR}/EXAMPLE.generated.md"
ls -la "${TMP_DIR}/EXAMPLE.generated.md"

{% if read_only_fail -%}
# Run it again, this time it should fail because the destination is read-only.
EXIT_CODE=0
unbuffer python -m snipinator.cli --cwd "${TMP_DIR}" \
  {{ mv_args }} \
  -t "${TMP_DIR}/EXAMPLE.md.jinja2" \
  -o "${TMP_DIR}/EXAMPLE.generated.md" \
  2>&1 > ${TMP_DIR}/snipinator.log \
  || EXIT_CODE=$?

# Expect it to fail because the generated file is read-only, and should not be
# writable by snipinator.
if [ "${EXIT_CODE}" -eq 1 ]; then
  echo -e "${GREEN}Successfully failed to write file${NC}"
else
  echo -e "${RED}Failed to fail writing file (for {{ mv_args }})${NC}"

  # Print the log file to help with debugging.
  cat "${TMP_DIR}/snipinator.log"

  echo -e "${RED}Failed to fail moving file${NC}"

  exit 1
fi
echo -e "${GREEN}Successfully failed to write to read-only file${NC}"
################################################################################

# Now do it once more, but with the --force flag. This should overwrite the
# read-only file.
python -m snipinator.cli --cwd "${TMP_DIR}" \
  {{ mv_args }} --force \
  -t "${TMP_DIR}/EXAMPLE.md.jinja2" \
  -o "${TMP_DIR}/EXAMPLE.generated.md"

echo -e "${GREEN}Successfully overwrote read-only file${NC}"
################################################################################
{%- else -%}
################################################################################
python -m snipinator.cli --cwd "${TMP_DIR}" \
  {{ mv_args }} \
  -t "${TMP_DIR}/EXAMPLE.md.jinja2" \
  -o "${TMP_DIR}/EXAMPLE.generated.md"

echo -e "${GREEN}Successfully overwrote read-only file${NC}"
################################################################################
{%- endif %}

echo -e "${GREEN}${BASH_SOURCE[0]}: All tests passed${NC}"
